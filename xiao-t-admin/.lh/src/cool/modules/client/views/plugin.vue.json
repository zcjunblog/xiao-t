{
    "sourceFile": "src/cool/modules/client/views/plugin.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1628586354357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1628586363328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -286,9 +286,9 @@\n \n \t\t// crud 加载\n \t\tfunction onLoad({ ctx, app }: CrudLoad) {\n \t\t\t// 绑定 service\n-\t\t\tctx.service(service.client.cli).done()\n+\t\t\tctx.service(service.client.plugin).done()\n \t\t\tapp.refresh()\n \t\t}\n \t\tfunction onRefresh(params: any, { next }: any) {\n \t\t\t// params 是每次请求的参数\n"
                },
                {
                    "date": 1628586523995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,174 +60,53 @@\n \t\t// 新增、编辑配置\n \t\tconst upsert = reactive<Upsert>({\n \t\t\titems: [\n \t\t\t\t{\n-\t\t\t\t\tlabel: \"模板名称\",\n+\t\t\t\t\tlabel: \"插件名称\",\n \t\t\t\t\tprop: \"name\",\n \t\t\t\t\tspan: 12,\n \t\t\t\t\tcomponent: {\n \t\t\t\t\t\tname: \"el-input\",\n \t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\tplaceholder: \"请填写模板名称\"\n+\t\t\t\t\t\t\tplaceholder: \"请填写插件名称\"\n \t\t\t\t\t\t}\n \t\t\t\t\t},\n \t\t\t\t\trules: {\n \t\t\t\t\t\trequired: true,\n \t\t\t\t\t\tmessage: \"名称不能为空\"\n \t\t\t\t\t}\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\tlabel: \"模板类型\",\n-\t\t\t\t\tprop: \"type\",\n+\t\t\t\t\tlabel: \"图标链接\",\n+\t\t\t\t\tprop: \"icon\",\n \t\t\t\t\tspan: 12,\n \t\t\t\t\tcomponent: {\n-\t\t\t\t\t\t// 任意组件名，el-button, el-input, cl-upload ...\n-\t\t\t\t\t\tname: \"el-select\",\n-\t\t\t\t\t\t// 只有 name 为：el-select, el-radio-group, el-checkbox-group 可用，作为选项值\n-\t\t\t\t\t\toptions: [\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tlabel: \"移动端\",\n-\t\t\t\t\t\t\t\tvalue: \"mobile\"\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tlabel: \"客户端\",\n-\t\t\t\t\t\t\t\tvalue: \"client\"\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tlabel: \"网页端\",\n-\t\t\t\t\t\t\t\tvalue: \"web\"\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tlabel: \"服务端\",\n-\t\t\t\t\t\t\t\tvalue: \"server\"\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t],\n-\t\t\t\t\t\t// 带入参数\n-\t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\t// clearable: true\n-\t\t\t\t\t\t},\n-\t\t\t\t\t\t// 监听事件\n-\t\t\t\t\t\ton: {\n-\t\t\t\t\t\t\tchange: (val: any) => {\n-\t\t\t\t\t\t\t\t// 注意使用箭头函数\n-\t\t\t\t\t\t\t\tconsole.log(112)\n-\t\t\t\t\t\t\t\tconsole.log(val)\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t},\n-\t\t\t\t\trules: {\n-\t\t\t\t\t\trequired: true,\n-\t\t\t\t\t\tmessage: \"模板类型不能为空\"\n-\t\t\t\t\t}\n-\t\t\t\t},\n-\t\t\t\t{\n-\t\t\t\t\tlabel: \"仓库地址\",\n-\t\t\t\t\tprop: \"url\",\n-\t\t\t\t\tspan: 12,\n-\t\t\t\t\tcomponent: {\n \t\t\t\t\t\tname: \"el-input\",\n \t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\tplaceholder: \"请填写仓库地址\"\n-\t\t\t\t\t\t},\n-\t\t\t\t\t\tonchange: () => {\n-\t\t\t\t\t\t\tlet form = refs.value.upsert.form\n-\t\t\t\t\t\t\tlet url = form.url\n-\t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\tlet tmp = url.split(\"/\")\n-\t\t\t\t\t\t\t\trefs.value.upsert.form.userName = tmp[3]\n-\t\t\t\t\t\t\t\trefs.value.upsert.form.host = tmp[2]\n-\t\t\t\t\t\t\t\trefs.value.upsert.form.repo = tmp[4]\n-\t\t\t\t\t\t\t} catch (error) {\n-\t\t\t\t\t\t\t\tElMessage.error(\"请检查是否是不支持的代码托管平台\")\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t},\n-\t\t\t\t\trules: {\n-\t\t\t\t\t\trequired: true,\n-\t\t\t\t\t\tmessage: \"仓库地址不能为空\"\n-\t\t\t\t\t}\n-\t\t\t\t},\n-\t\t\t\t{\n-\t\t\t\t\tlabel: \"克隆地址\",\n-\t\t\t\t\tprop: \"git\",\n-\t\t\t\t\tspan: 12,\n-\t\t\t\t\tcomponent: {\n-\t\t\t\t\t\tname: \"el-input\",\n-\t\t\t\t\t\tprops: {\n \t\t\t\t\t\t\tplaceholder: \"请填写克隆地址\"\n \t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t},\n-\t\t\t\t{\n-\t\t\t\t\tlabel: \"仓库作者\",\n-\t\t\t\t\tprop: \"userName\",\n-\t\t\t\t\tspan: 12,\n-\t\t\t\t\tcomponent: {\n-\t\t\t\t\t\tname: \"el-input\",\n-\t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\tplaceholder: \"请填写仓库作者\"\n-\t\t\t\t\t\t}\n \t\t\t\t\t},\n \t\t\t\t\trules: {\n \t\t\t\t\t\trequired: true,\n-\t\t\t\t\t\tmessage: \"仓库作者不能为空\"\n+\t\t\t\t\t\tmessage: \"图标链接不能为空\"\n \t\t\t\t\t}\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\tlabel: \"托管平台\",\n-\t\t\t\t\tprop: \"host\",\n+\t\t\t\t\tlabel: \"下载地址\",\n+\t\t\t\t\tprop: \"downloadUrl\",\n \t\t\t\t\tspan: 12,\n \t\t\t\t\tcomponent: {\n-\t\t\t\t\t\tname: \"el-select\",\n-\t\t\t\t\t\t// 只有 name 为：el-select, el-radio-group, el-checkbox-group 可用，作为选项值\n-\t\t\t\t\t\toptions: [\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tlabel: \"GitHub\",\n-\t\t\t\t\t\t\t\tvalue: \"github.com\"\n-\t\t\t\t\t\t\t},\n-\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\tlabel: \"码云\",\n-\t\t\t\t\t\t\t\tvalue: \"gitee.com\"\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t]\n-\t\t\t\t\t},\n-\t\t\t\t\trules: {\n-\t\t\t\t\t\trequired: true,\n-\t\t\t\t\t\tmessage: \"托管平台不能为空\"\n-\t\t\t\t\t}\n-\t\t\t\t},\n-\n-\t\t\t\t{\n-\t\t\t\t\tlabel: \"仓库名称\",\n-\t\t\t\t\tprop: \"repo\",\n-\t\t\t\t\tspan: 12,\n-\t\t\t\t\tcomponent: {\n \t\t\t\t\t\tname: \"el-input\",\n \t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\tplaceholder: \"请填写仓库名称\"\n+\t\t\t\t\t\t\tplaceholder: \"请填写下载地址\"\n \t\t\t\t\t\t}\n \t\t\t\t\t},\n \t\t\t\t\trules: {\n \t\t\t\t\t\trequired: true,\n-\t\t\t\t\t\tmessage: \"仓库名称不能为空\"\n+\t\t\t\t\t\tmessage: \"下载地址不能为空\"\n \t\t\t\t\t}\n \t\t\t\t},\n \t\t\t\t{\n-\t\t\t\t\tlabel: \"分支名称\",\n-\t\t\t\t\tprop: \"branch\",\n-\t\t\t\t\tspan: 12,\n-\t\t\t\t\tcomponent: {\n-\t\t\t\t\t\tname: \"el-input\",\n-\t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\tplaceholder: \"请填写分支名称\"\n-\t\t\t\t\t\t}\n-\t\t\t\t\t},\n-\t\t\t\t\trules: {\n-\t\t\t\t\t\trequired: true,\n-\t\t\t\t\t\tmessage: \"分支名称不能为空\"\n-\t\t\t\t\t}\n-\t\t\t\t},\n-\t\t\t\t{\n \t\t\t\t\tlabel: \"相关描述\",\n \t\t\t\t\tprop: \"desc\",\n \t\t\t\t\tspan: 24,\n \t\t\t\t\tcomponent: {\n"
                },
                {
                    "date": 1628586615304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,8 @@\n \t\t\t<cl-add-btn />\n \t\t\t<!-- 删除按钮 -->\n \t\t\t<cl-multi-delete-btn />\n \t\t\t<cl-flex1 />\n-\t\t\t<!-- 筛选组件 -->\n-\t\t\t<cl-filter label=\"适用平台\">\n-\t\t\t\t<el-select size=\"mini\" @change=\"onFilterSearch\" v-model=\"form.type\">\n-\t\t\t\t\t<el-option value=\"\" label=\"全部\" />\n-\t\t\t\t\t<el-option value=\"mobile\" label=\"移动端\" />\n-\t\t\t\t\t<el-option value=\"client\" label=\"客户端\" />\n-\t\t\t\t\t<el-option value=\"web\" label=\"网页端\" />\n-\t\t\t\t\t<el-option value=\"server\" label=\"服务端\" />\n-\t\t\t\t</el-select>\n-\t\t\t</cl-filter>\n \t\t\t<!-- 关键字搜索 -->\n \t\t\t<cl-search-key placeholder=\"输入框架名称进行搜索\" />\n \t\t</el-row>\n \n@@ -177,12 +167,8 @@\n \t\t\t\tparams.type = state.form.type\n \t\t\t}\n \t\t\tnext(params)\n \t\t}\n-\t\tfunction onFilterSearch() {\n-\t\t\tconsole.log(state.form.type)\n-\t\t\trefs.value.crud.refresh()\n-\t\t}\n \n \t\t// 提交钩子\n \t\tfunction onUpsertSubmit(_: boolean, data: any, { next }: any) {\n \t\t\tdelete data.createTime\n@@ -199,9 +185,8 @@\n \t\t\tupsert,\n \t\t\ttable,\n \t\t\tonLoad,\n \t\t\tonUpsertSubmit,\n-\t\t\tonFilterSearch,\n \t\t\tonRefresh,\n \t\t\t...toRefs(state)\n \t\t}\n \t}\n"
                },
                {
                    "date": 1628586634254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,13 +41,9 @@\n \tsetup() {\n \t\tconst { refs, setRefs } = useRefs()\n \t\t// 请求服务\n \t\tconst service = inject<any>(\"service\")\n-\t\tconst state: any = reactive({\n-\t\t\tform: {\n-\t\t\t\ttype: \"\"\n-\t\t\t}\n-\t\t})\n+\t\tconst state: any = reactive({})\n \t\t// 新增、编辑配置\n \t\tconst upsert = reactive<Upsert>({\n \t\t\titems: [\n \t\t\t\t{\n"
                },
                {
                    "date": 1628586664989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n <template>\n-\t<cl-crud :ref=\"setRefs('crud')\" @load=\"onLoad\" @refresh=\"onRefresh\">\n+\t<cl-crud :ref=\"setRefs('crud')\" @load=\"onLoad\">\n \t\t<el-row type=\"flex\" align=\"middle\">\n \t\t\t<!-- 刷新按钮 -->\n \t\t\t<cl-refresh-btn />\n \t\t\t<!-- 新增按钮 -->\n@@ -33,9 +33,9 @@\n <script lang=\"ts\">\n import { toRefs, defineComponent, inject, reactive } from \"vue\"\n import { CrudLoad, Upsert, Table } from \"cl-admin-crud-vue3/types\"\n import { useRefs } from \"/@/core\"\n-import { ElMessage } from \"element-plus\"\n+// import { ElMessage } from \"element-plus\"\n \n export default defineComponent({\n \tname: \"cli-template\",\n \tsetup() {\n@@ -154,18 +154,8 @@\n \t\t\t// 绑定 service\n \t\t\tctx.service(service.client.plugin).done()\n \t\t\tapp.refresh()\n \t\t}\n-\t\tfunction onRefresh(params: any, { next }: any) {\n-\t\t\t// params 是每次请求的参数\n-\t\t\t// next(params) 是继续往下执行 page 的请求\n-\t\t\tconsole.log(params)\n-\t\t\tif (state.form.type) {\n-\t\t\t\tparams.type = state.form.type\n-\t\t\t}\n-\t\t\tnext(params)\n-\t\t}\n-\n \t\t// 提交钩子\n \t\tfunction onUpsertSubmit(_: boolean, data: any, { next }: any) {\n \t\t\tdelete data.createTime\n \t\t\tdelete data.updateTime\n@@ -181,9 +171,8 @@\n \t\t\tupsert,\n \t\t\ttable,\n \t\t\tonLoad,\n \t\t\tonUpsertSubmit,\n-\t\t\tonRefresh,\n \t\t\t...toRefs(state)\n \t\t}\n \t}\n })\n"
                },
                {
                    "date": 1628587987769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,20 @@\n \t\t\t\t\tspan: 24,\n \t\t\t\t\tcomponent: {\n \t\t\t\t\t\tname: \"el-input\",\n \t\t\t\t\t\tprops: {\n-\t\t\t\t\t\t\tplaceholder: \"请填写相关描述\",\n+\t\t\t\t\t\t\tplaceholder: \"请填写相关描述\"\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\t{\n+\t\t\t\t\tlabel: \"配置文件\",\n+\t\t\t\t\tprop: \"pluginJson\",\n+\t\t\t\t\tspan: 24,\n+\t\t\t\t\tcomponent: {\n+\t\t\t\t\t\tname: \"el-input\",\n+\t\t\t\t\t\tprops: {\n+\t\t\t\t\t\t\tplaceholder: \"请填写plugin.json的内容\",\n \t\t\t\t\t\t\ttype: \"textarea\",\n \t\t\t\t\t\t\trows: 4\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n"
                },
                {
                    "date": 1628588019762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,12 @@\n \t\t\t\t\t\t\tplaceholder: \"请填写plugin.json的内容\",\n \t\t\t\t\t\t\ttype: \"textarea\",\n \t\t\t\t\t\t\trows: 4\n \t\t\t\t\t\t}\n+\t\t\t\t\t},\n+\t\t\t\t\trules: {\n+\t\t\t\t\t\trequired: true,\n+\t\t\t\t\t\tmessage: \"配置文件不能为空\"\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t]\n \t\t})\n"
                },
                {
                    "date": 1628588068684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n \t\t\t\t\t\tname: \"el-input\",\n \t\t\t\t\t\tprops: {\n \t\t\t\t\t\t\tplaceholder: \"请填写plugin.json的内容\",\n \t\t\t\t\t\t\ttype: \"textarea\",\n-\t\t\t\t\t\t\trows: 4\n+\t\t\t\t\t\t\trows: 8\n \t\t\t\t\t\t}\n \t\t\t\t\t},\n \t\t\t\t\trules: {\n \t\t\t\t\t\trequired: true,\n"
                }
            ],
            "date": 1628586354357,
            "name": "Commit-0",
            "content": "<template>\n\t<cl-crud :ref=\"setRefs('crud')\" @load=\"onLoad\" @refresh=\"onRefresh\">\n\t\t<el-row type=\"flex\" align=\"middle\">\n\t\t\t<!-- 刷新按钮 -->\n\t\t\t<cl-refresh-btn />\n\t\t\t<!-- 新增按钮 -->\n\t\t\t<cl-add-btn />\n\t\t\t<!-- 删除按钮 -->\n\t\t\t<cl-multi-delete-btn />\n\t\t\t<cl-flex1 />\n\t\t\t<!-- 筛选组件 -->\n\t\t\t<cl-filter label=\"适用平台\">\n\t\t\t\t<el-select size=\"mini\" @change=\"onFilterSearch\" v-model=\"form.type\">\n\t\t\t\t\t<el-option value=\"\" label=\"全部\" />\n\t\t\t\t\t<el-option value=\"mobile\" label=\"移动端\" />\n\t\t\t\t\t<el-option value=\"client\" label=\"客户端\" />\n\t\t\t\t\t<el-option value=\"web\" label=\"网页端\" />\n\t\t\t\t\t<el-option value=\"server\" label=\"服务端\" />\n\t\t\t\t</el-select>\n\t\t\t</cl-filter>\n\t\t\t<!-- 关键字搜索 -->\n\t\t\t<cl-search-key placeholder=\"输入框架名称进行搜索\" />\n\t\t</el-row>\n\n\t\t<el-row>\n\t\t\t<!-- 数据表格 -->\n\t\t\t<cl-table :ref=\"setRefs('table')\" v-bind=\"table\">\n\t\t\t\t<!-- <template #column-name=\"{ scope }\"> {{ scope.row.name }}，你好 </template> -->\n\t\t\t</cl-table>\n\t\t</el-row>\n\n\t\t<el-row type=\"flex\">\n\t\t\t<cl-flex1 />\n\t\t\t<!-- 分页控件 -->\n\t\t\t<cl-pagination />\n\t\t</el-row>\n\n\t\t<!-- 新增、编辑 -->\n\t\t<cl-upsert :ref=\"setRefs('upsert')\" v-bind=\"upsert\" :on-submit=\"onUpsertSubmit\" />\n\t</cl-crud>\n</template>\n\n<script lang=\"ts\">\nimport { toRefs, defineComponent, inject, reactive } from \"vue\"\nimport { CrudLoad, Upsert, Table } from \"cl-admin-crud-vue3/types\"\nimport { useRefs } from \"/@/core\"\nimport { ElMessage } from \"element-plus\"\n\nexport default defineComponent({\n\tname: \"cli-template\",\n\tsetup() {\n\t\tconst { refs, setRefs } = useRefs()\n\t\t// 请求服务\n\t\tconst service = inject<any>(\"service\")\n\t\tconst state: any = reactive({\n\t\t\tform: {\n\t\t\t\ttype: \"\"\n\t\t\t}\n\t\t})\n\t\t// 新增、编辑配置\n\t\tconst upsert = reactive<Upsert>({\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"模板名称\",\n\t\t\t\t\tprop: \"name\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写模板名称\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"名称不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"模板类型\",\n\t\t\t\t\tprop: \"type\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\t// 任意组件名，el-button, el-input, cl-upload ...\n\t\t\t\t\t\tname: \"el-select\",\n\t\t\t\t\t\t// 只有 name 为：el-select, el-radio-group, el-checkbox-group 可用，作为选项值\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"移动端\",\n\t\t\t\t\t\t\t\tvalue: \"mobile\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"客户端\",\n\t\t\t\t\t\t\t\tvalue: \"client\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"网页端\",\n\t\t\t\t\t\t\t\tvalue: \"web\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"服务端\",\n\t\t\t\t\t\t\t\tvalue: \"server\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\t// 带入参数\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t// clearable: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t// 监听事件\n\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\tchange: (val: any) => {\n\t\t\t\t\t\t\t\t// 注意使用箭头函数\n\t\t\t\t\t\t\t\tconsole.log(112)\n\t\t\t\t\t\t\t\tconsole.log(val)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"模板类型不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"仓库地址\",\n\t\t\t\t\tprop: \"url\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写仓库地址\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\t\tlet form = refs.value.upsert.form\n\t\t\t\t\t\t\tlet url = form.url\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet tmp = url.split(\"/\")\n\t\t\t\t\t\t\t\trefs.value.upsert.form.userName = tmp[3]\n\t\t\t\t\t\t\t\trefs.value.upsert.form.host = tmp[2]\n\t\t\t\t\t\t\t\trefs.value.upsert.form.repo = tmp[4]\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tElMessage.error(\"请检查是否是不支持的代码托管平台\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"仓库地址不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"克隆地址\",\n\t\t\t\t\tprop: \"git\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写克隆地址\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"仓库作者\",\n\t\t\t\t\tprop: \"userName\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写仓库作者\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"仓库作者不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"托管平台\",\n\t\t\t\t\tprop: \"host\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-select\",\n\t\t\t\t\t\t// 只有 name 为：el-select, el-radio-group, el-checkbox-group 可用，作为选项值\n\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"GitHub\",\n\t\t\t\t\t\t\t\tvalue: \"github.com\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"码云\",\n\t\t\t\t\t\t\t\tvalue: \"gitee.com\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"托管平台不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tlabel: \"仓库名称\",\n\t\t\t\t\tprop: \"repo\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写仓库名称\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"仓库名称不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"分支名称\",\n\t\t\t\t\tprop: \"branch\",\n\t\t\t\t\tspan: 12,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写分支名称\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trules: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tmessage: \"分支名称不能为空\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"相关描述\",\n\t\t\t\t\tprop: \"desc\",\n\t\t\t\t\tspan: 24,\n\t\t\t\t\tcomponent: {\n\t\t\t\t\t\tname: \"el-input\",\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\tplaceholder: \"请填写相关描述\",\n\t\t\t\t\t\t\ttype: \"textarea\",\n\t\t\t\t\t\t\trows: 4\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\t// 表格配置\n\t\tconst table = reactive<Table>({\n\t\t\tprops: {\n\t\t\t\t\"default-sort\": {\n\t\t\t\t\tprop: \"createTime\",\n\t\t\t\t\torder: \"descending\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolumns: [\n\t\t\t\t{\n\t\t\t\t\tlabel: \"插件名称\",\n\t\t\t\t\tprop: \"name\",\n\t\t\t\t\tminWidth: 150\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"插件描述\",\n\t\t\t\t\tprop: \"desc\",\n\t\t\t\t\tminWidth: 180\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"图标链接\",\n\t\t\t\t\tprop: \"icon\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"下载地址\",\n\t\t\t\t\tprop: \"downloadUrl\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"创建时间\",\n\t\t\t\t\tprop: \"createTime\",\n\t\t\t\t\tsortable: \"true\",\n\t\t\t\t\tminWidth: 140\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// 操作栏\n\t\t\t\t\ttype: \"op\",\n\t\t\t\t\talign: \"center\",\n\t\t\t\t\tbuttons: [\"edit\", \"delete\"]\n\t\t\t\t}\n\t\t\t]\n\t\t})\n\n\t\t// crud 加载\n\t\tfunction onLoad({ ctx, app }: CrudLoad) {\n\t\t\t// 绑定 service\n\t\t\tctx.service(service.client.cli).done()\n\t\t\tapp.refresh()\n\t\t}\n\t\tfunction onRefresh(params: any, { next }: any) {\n\t\t\t// params 是每次请求的参数\n\t\t\t// next(params) 是继续往下执行 page 的请求\n\t\t\tconsole.log(params)\n\t\t\tif (state.form.type) {\n\t\t\t\tparams.type = state.form.type\n\t\t\t}\n\t\t\tnext(params)\n\t\t}\n\t\tfunction onFilterSearch() {\n\t\t\tconsole.log(state.form.type)\n\t\t\trefs.value.crud.refresh()\n\t\t}\n\n\t\t// 提交钩子\n\t\tfunction onUpsertSubmit(_: boolean, data: any, { next }: any) {\n\t\t\tdelete data.createTime\n\t\t\tdelete data.updateTime\n\t\t\tconsole.log(data)\n\t\t\tnext({\n\t\t\t\t...data\n\t\t\t})\n\t\t}\n\n\t\treturn {\n\t\t\trefs,\n\t\t\tsetRefs,\n\t\t\tupsert,\n\t\t\ttable,\n\t\t\tonLoad,\n\t\t\tonUpsertSubmit,\n\t\t\tonFilterSearch,\n\t\t\tonRefresh,\n\t\t\t...toRefs(state)\n\t\t}\n\t}\n})\n</script>\n"
        }
    ]
}